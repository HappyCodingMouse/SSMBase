<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springmvc.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="com.springmvc.model.Student">
    <!--<constructor>-->
      <!--<idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />-->
      <!--<arg column="age" javaType="java.lang.Integer" jdbcType="INTEGER" />-->
      <!--<arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />-->
    <!--</constructor>-->
    <id property="id" column="id" javaType="java.lang.Integer" jdbcType="INTEGER"/>
    <result property="age" column="age" javaType="java.lang.Integer" jdbcType="INTEGER" />
    <result property="name" column="name" javaType="java.lang.String" jdbcType="VARCHAR"  />
  </resultMap>

  <sql id="Base_Column_List">
    id, age, name
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.springmvc.model.Student">
    insert into student (id, age, name
    )
    values (#{id,jdbcType=INTEGER}, #{age,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}
    )
  </insert>

  <insert id="insertSelective" parameterType="com.springmvc.model.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="name != null">
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.springmvc.model.Student">
    update student
    <set>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKey" parameterType="com.springmvc.model.Student">
    update student
    set age = #{age,jdbcType=INTEGER},
    name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAllStudent" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    from student
  </select>

  <select id="getTotalRowCount" resultType="java.lang.Long">
    select count(*) count
    from student
    where 1 = 1
    <if test="keywords != null and keywords != ''">
      and name like concat("%",#{keywords,jdbcType=VARCHAR},"%")
    </if>
  </select>

  <select id="getStudentByPage" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    where 1 = 1
    <if test="keywords != null and keywords != ''">
      and name like concat("%",#{keywords,jdbcType=VARCHAR},"%")
    </if>
    limit #{startIndex,jdbcType=INTEGER},#{pageSize,jdbcType=INTEGER}
  </select>

  <select id="getStudentByPage2" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    where 1 = 1
    <if test="keywords != null and keywords != ''">
      and name like concat("%",#{keywords,jdbcType=VARCHAR},"%")
    </if>
  </select>

</mapper>